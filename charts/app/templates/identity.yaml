kind: ConfigMap
apiVersion: v1
metadata:
  name: identity-cm
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: identity-api
data:
  AZURE_CLIENT_ID: {{ .Values.WORKLOAD_ID.CLIENT_ID }}
  ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
  APP_INSIGHTS_CONNECTION_STRING: {{ .Values.APP_INSIGHTS.CONNECTION_STRING }}
  DOTNET_USE_POLLING_FILE_WATCHER: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
  OTEL_EXPORTER_OTLP_ENDPOINT: {{ .Values.OTEL.ENDPOINT }}
  BasketApiClient: {{ .Values.ISTIO.BASKET.INTERNAL_URL }}
  OrderingApiClient: {{ .Values.ISTIO.ORDERING.INTERNAL_URL }}
  WebAppClient: {{ print "https://" .Values.ISTIO.WEBAPP.EXTERNAL_URL }}
  WebhooksApiClient: {{ .Values.ISTIO.WEBHOOKS.INTERNAL_URL }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: identity-api
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: identity-api
spec:
  replicas: 1
  selector:
    matchLabels:
      service: identity-api
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        service: identity-api
        azure.workload.identity/use: "true" 
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.ISTIO.IDENTITY.PORT | quote }}
        prometheus.io/path: "/metrics"              
    spec:
      serviceAccountName: {{ .Values.WORKLOAD_ID.NAME }}
      containers:
        - name: identity-api
          image: {{ print .Values.ACR.NAME ".azurecr.io/identity-api:" .Values.GIT_COMMIT_VERSION }}
          imagePullPolicy: Always
          ports:
          - containerPort: {{ .Values.ISTIO.IDENTITY.PORT }}
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: "0.5"
              memory: 128Mi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false          
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.ISTIO.IDENTITY.PORT }}
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          #   timeoutSeconds: 3    
          volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"                       
            readOnly: true
          envFrom:
            - configMapRef:
                name: identity-cm
          env:       
          - name: ConnectionStrings__identitydb
            valueFrom:
              secretKeyRef:
                name: eshop-kv-secrets   
                key: identitydb-connection-string
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: eshop-secrets              
      tolerations:
      - key: "ReservedFor"
        operator: "Equal"
        value: "apps"
        effect: "NoSchedule"
---
kind: Service
apiVersion: v1
metadata:
  name: identity-api
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: {{ .Values.ISTIO.IDENTITY.PORT }}
  selector:
    service: identity-api
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name:  identity-api-vs
  namespace: {{ .Values.NAMESPACE }}
spec:
  hosts:
  -  {{ .Values.ISTIO.IDENTITY.EXTERNAL_URL }}
  gateways:
  -  {{ .Values.ISTIO.GATEWAY }}
  http:
  - route:
    - destination:
        host: identity-api
        port:
          number: 80