kind: ConfigMap
apiVersion: v1
metadata:
  name: ordering-cm
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: ordering-api
data:
  #Identity__Url: {{ .Values.ISTIO.IDENTITY.INTERNAL_URL }}
  Identity__Url: {{ print "https://" .Values.ISTIO.IDENTITY.EXTERNAL_URL }}
  AZURE_CLIENT_ID: {{ .Values.WORKLOAD_ID.CLIENT_ID }}
  ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
  DOTNET_USE_POLLING_FILE_WATCHER: "true"  
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
  OTEL_EXPORTER_OTLP_ENDPOINT: {{ .Values.OTEL.ENDPOINT }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ordering-api
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: ordering-api
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ordering-api
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        service: ordering-api
        azure.workload.identity/use: "true"         
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.ISTIO.ORDERING.PORT | quote }}
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ .Values.WORKLOAD_ID.NAME }}
      containers:
        - name: ordering-api
          image: {{ print .Values.ACR.NAME ".azurecr.io/ordering-api:" .Values.GIT_COMMIT_VERSION }}
          ports:
          - containerPort: {{ .Values.ISTIO.ORDERING.PORT }}          
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: "0.5"
              memory: 128Mi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false          
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.ISTIO.ORDERING.PORT }}
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          #   timeoutSeconds: 3     
          volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"                       
            readOnly: true
          envFrom:
          - configMapRef:
              name: ordering-cm
          env:
          - name: ConnectionStrings__eventbus
            valueFrom:
              secretKeyRef:
                name: eventbus-secret
                key:  RABBITMQ_CONNECTION_STRING        
          - name: ConnectionStrings__orderingdb
            valueFrom:
              secretKeyRef:
                name: eshop-kv-secrets 
                key: orderingdb-connection-string
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "eshop-secrets"          
      tolerations:
      - key: "ReservedFor"
        operator: "Equal"
        value: "apps"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: ordering-api
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: ordering-api
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: {{ .Values.ISTIO.ORDERING.PORT }} 
  selector:
    service: ordering-api