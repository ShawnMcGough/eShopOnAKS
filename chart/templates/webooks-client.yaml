kind: ConfigMap
apiVersion: v1
metadata:
  name: webhookclient-cm
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: webhookclient
data:
  CallBackUrl: {{ print "https://" .Values.ISTIO.WEBAPP.EXTERNAL_URL }}
  IdentityUrl: {{ print "https://" .Values.ISTIO.IDENTITY.EXTERNAL_URL }}
  AZURE_CLIENT_ID: {{ .Values.WORKLOAD_ID.CLIENT_ID }}
  ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
  DOTNET_USE_POLLING_FILE_WATCHER: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: webhookclient
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
    service: webhookclient
spec:
  replicas: 1
  selector:
    matchLabels:
      service: webhookclient
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        service: webhookclient
        azure.workload.identity/use: "true" 
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"        
    spec:
      serviceAccountName: {{ .Values.WORKLOAD_ID.NAME }}
      containers:
        - name: webhookclient
          image: {{ print .Values.ACR.NAME ".azurecr.io/webhookclient:" .Values.GIT_COMMIT_VERSION }}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: {{ .Values.ISTIO.WEBHOOKS.PORT }}
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: "0.5"
              memory: 128Mi
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false          
          # livenessProbe:
          #   httpGet:
          #     path: /health/liveness
          #     port: {{ .Values.ISTIO.WEBHOOKS.PORT }}
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          #   timeoutSeconds: 3
          # startupProbe:
          #   httpGet:
          #     path: /health/liveness
          #     port: {{ .Values.ISTIO.WEBHOOKS.PORT }}
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   timeoutSeconds: 3               
          envFrom:
            - configMapRef:
                name: webhookclient-cm        
      tolerations:
      - key: "ReservedFor"
        operator: "Equal"
        value: "apps"
        effect: "NoSchedule"
---
kind: Service
apiVersion: v1
metadata:
  name: webhookclient
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app: {{ .Chart.Name }}
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: {{ .Values.ISTIO.WEBHOOKS.PORT }}
  selector:
    service: webhookclient