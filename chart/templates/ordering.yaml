kind: ConfigMap
apiVersion: v1
metadata:
  name: ordering-cm
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering-api
data:
  Identity__Url: http://identity-api
  AZURE_CLIENT_ID: {{ .Values.WORKLOAD_ID.CLIENT_ID }}
  ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
  OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ordering-api
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering-api
spec:
  replicas: 1
  selector:
    matchLabels:
      service: ordering-api
  template:
    metadata:
      labels:
        app: eshop
        service: ordering-api
      annotations:
        dapr.io/log-as-json: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/"
    spec:
      serviceAccountName: {{ .Values.WORKLOAD_ID.NAME }}
      containers:
        - name: ordering-api
          image: {{ print .Values.ACR.NAME ".azurecr.io/ordering-api:" .Values.GIT_COMMIT_VERSION }}
          imagePullPolicy: IfNotPresent
          envFrom:
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: ordering-cm
          env:
          - name: ConnectionStrings__orderingdb
            valueFrom:
              secretKeyRef:
                name: orderingdb-connection-string
                key: orderingdb-connection-string
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "eshop-secrets"          
      tolerations:
      - key: "ReservedFor"
        operator: "Equal"
        value: "apps"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: ordering-api
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: ordering-api
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: HTTP
  selector:
    service: ordering-api
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name:  ordering-api-vs
  namespace: {{ .Values.namespace }}
spec:
  hosts:
  -  {{ .Values.ISTIO.HOST }}
  gateways:
  -  {{ .Values.ISTIO.GATEWAY }}
  http:
  - route:
    - destination:
        host: ordering-api
        port:
          number: 8080